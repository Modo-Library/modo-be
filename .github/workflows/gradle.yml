# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  S3_BUCKET_NAME: modo-deploy
  CODEDEPLOY_APPLICATION_NAME: modo-deploy
  DEPLOYMENT_GROUP_NAME: modo-deploy

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Redis Server in GitHub Actions
        uses: supercharge/redis-github-action@1.5.0

      - name: Create Properties files
        run: touch ./src/main/resources/application.properties ; touch ./src/main/resources/application-real1.properties ; touch ./src/main/resources/application-real2.properties

      - name: Load Application Properties
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      - name: Load Application Real1 Properties
        run: echo "${{ secrets.APPLICATION_REAL1_PROPERTIES }}" > ./src/main/resources/application-real1.properties

      - name: Load Application Real2 Properties
        run: echo "${{ secrets.APPLICATION_REAL2_PROPERTIES }}" > ./src/main/resources/application-real2.properties

      - name: Build with gradle
        run: ./gradlew clean build

      - name: Build with gradle
        run: ./gradlew clean build

      - name: Make Directory for deliver
        run: mkdir deploy

      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

      - name: Copy appspec
        run: cp ./appspec.yml ./deploy/


      - name: Copy shell
        run: cp ./scripts/* ./deploy/

      - name: Grant execute permission for scripts
        run: chmod +x ./scripts/*


      - name: Make zip file
        run: zip -r -qq -j ./modo-deploy.zip ./deploy/


      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private \
          ./modo-deploy.zip s3://modo-deploy/


      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name $CODEDEPLOY_APPLICATION_NAME \
          --deployment-group-name $DEPLOYMENT_GROUP_NAME \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=modo-deploy.zip \
          --region ap-northeast-2





