# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

permissions: write-all

on:
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Redis Server in GitHub Actions
        uses: supercharge/redis-github-action@1.5.0

      - name: MySql Test Server in GitHub Actions
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3305 # Optional, default value is 3306. The port of host
          container port: 3306 # Optional, default value is 3306. The port of container
          mysql version: '8.0'
          mysql database: 'modo'
          mysql root password: '1234'

      - name: MySql Server in GitHub Actions
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306 # Optional, default value is 3306. The port of host
          container port: 3306 # Optional, default value is 3306. The port of container
          mysql version: '8.0'
          mysql database: 'modo'
          mysql root password: ${{ secrets.MYSQL_ROOT_PASSWORD }} # Required if "mysql user" exists. The password for the "mysql user"

      - name: Create Properties files
        run: touch ./src/main/resources/application.properties ; touch ./src/main/resources/application-real1.properties ; touch ./src/main/resources/application-real2.properties ; mkdir ~/.aws ; touch ~/.aws/config ; mkdir ./src/test/resources; touch ./src/test/resources/application-test.properties

      - name: Load Application Properties
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      - name: Load Application Real1 Properties
        run: echo "${{ secrets.APPLICATION_REAL1_PROPERTIES }}" > ./src/main/resources/application-real1.properties

      - name: Load Application Real2 Properties
        run: echo "${{ secrets.APPLICATION_REAL2_PROPERTIES }}" > ./src/main/resources/application-real2.properties

      - name: Load Application Test Properties
        run: echo "${{ secrets.APPLICATION_TEST_PROPERTIES }}" > ./src/test/resources/application-test.properties

      - name: Load AWS SDK Key file
        run: echo "${{ secrets.AWS_SDK_KEY }}" > ~/.aws/config

      - name: Test with gradle
        run: ./gradlew clean test